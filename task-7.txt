task 7:
---------

a) class movie {
  constructor(title, studio, rating) {
    this.title = title;
    this.studio = studio;
    this.rating = rating;
  }

  getrating() {
    return "the rating is  " + this.rating;
  }
}


 class movie() {
	
	String rating ="PG"
	String studio ;
	String title;
	
	movie(String title, String studio, String rating){
	this.title="";
	this.studio = "";
	this.rating = "PG';
	}
	}
}

b)  class movie {
    constructor(title, studio, rating){
        this.title = title;
        this.studio = studio;
        this.rating = "PG";
    }
}

c) getPG(array movie){
	return movie;

d) const CasinoRoyale = new movie( "Casino Royal", "Eon Productions", "PG13");


2) class Circle
{
	const radius = 1.0
	let Color = "red"
	const area;
	const circumference;
	
	Circle(){}
	Circle(double radius){}
	Circle(double radius, String color)
	
	getRadius(){
	return radius;
	}
	setRadius(const radius){
	this.radius = radius;}
	
	getColor(){
	return Color;
	}
	
	setColor(String Color){
	this.Color = Color;
	}
	
	toString(){
	return Color;
	}
	
	getArea(){
	return area;}
	
	getCircumference(){
	return Circumference;
	}

}

3) class Person {
	Person(){}
	
	String Name;
	let Address;
	
	const pers = new Person();
}

class Student extends Person {
constructor(name, teacher){
super(name)
this.teaches = teaches;
}

const vast = new Professor('Vast','science')



}

<html>
    <body>
    </br>
        <label for = "km" >Enter the travelled kilometer: </label>
        <input type = "number" name = "km" id="km">
    </br>
</br>
<p>Price per kilomeer is 6$</p></br>
        <button onclick="thePrice()" >click here to calculate the price</button>
        <script src = "script.js"></script>
    </body>
    </html>
	
function uberPrice(){
    
    alert("hi...");
    alert(document.getElementById("km").value);
    //let km=10;
let price  = 6;
let fareprice =0;
    km =document.getElementById("km").value;

    if(km!=0){
        alert(km)
        fareprice = km * price;
    }
    console.log("the uber price is..."+fareprice)   ;
    document.body.innerHTML = '';
    document.body.innerHTML += "the uber price is .."+fareprice;
}

function thePrice(){
    uberPrice();
}

var req=new XMLHttpRequest();
req.open('GET','https://restcountries.eu/rest/v2/all','true');
req.send();
req.onload=function (){
    var countryData=JSON.parse(this.response);
    const asia=countryData.filter((element)=>{
        if(element.region==='Asia'){
            return element.name;
        }
    })
    console.log(asia);}
	
	
class UberPrice{
	
	
}
	
1.Get all the countries from Asia continent /region using Filter function

var request=new XMLHttpRequest();
request.open('GET','https://restcountries.com/v3.1/all','true');
request.send();
request.onload=function (){
    var countryData=JSON.parse(this.response);
    const asia=countryData.filter((element)=>{
        if(element.region==='Asia'){
            return element.name;
        }
    })
    console.log(asia);}
	
	

 2. Get all the countries with population of less than 2 lacs using Filter function
 
var request=new XMLHttpRequest();
request.open('GET','https://restcountries.eu/rest/v2/all','true');
request.send();
request.onload=function (){
    var countryData=JSON.parse(this.response);
    const popu=countryData.filter((element)=>{
        return element.population<200000;
    })
    console.log(popu);}

3. Print the following details name, capital, flag using forEach function.

var request=new XMLHttpRequest();
request.open('GET','https://restcountries.eu/rest/v2/all','true');
request.send();
request.onload=function (){
    var countryData=JSON.parse(this.response);
    countryData.forEach((element)=>{
        console.log(element.name,element.capital,element.flag);
    })}
4. Print the total population of countries using reduce function 


var request=new XMLHttpRequest();
request.open('GET','https://restcountries.eu/rest/v2/all','true');
request.send();
request.onload=function (){
    var countryData=JSON.parse(this.response);
    const population=countryData.reduce((acc,element)=>{
        return acc+element.population;
    },0)
    console.log(population);}
	
5. Print the country which use US Dollars as currency.

var request = new XMLHttpRequest();
request.open('Get', 'https://restcountries.com/v3.1/all', true)
request.send();
request.onload = function () {
        var data = JSON.parse(this.response);
        var cur=[];
        for(i=0;i<data.length;i++){
            if(data[i].currencies[0].code==="USD")
            {
                console.log("name:",data[i].name,"==>",data[i].currencies[0].code)
            }
        }
    }
	